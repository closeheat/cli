var Authorized,Cloner,Git,Log,Promise,Urls;Promise=require("bluebird"),Git=require("git-wrapper"),Authorized=require("./authorized"),Urls=require("./urls"),Log=require("./log"),module.exports=Cloner=function(){function e(){}return e.prototype.clone=function(e){return Log.logo(),Log.spin("Getting application data for "+e+"."),this.getAppData(e).then(function(o){return function(t){return Log.stop(),Log.br(),Log.spin("Cloning Github repository at "+t.github_repo+"."),o.execCloning(t.github_repo,t.default_branch,e).then(function(){return Log.stop(),Log.inner("Cloned the app code to directory '"+e+"'."),Log.br(),Log.line("Run the server by typing:"),Log.code(["cd "+e,"closeheat"]),Log.br(),Log.p("The quickest way to deploy changes to closeheat.com and Github is with:"),Log.secondaryCode("closeheat deploy"),Log.br(),Log.p("For more awesome tricks type:"),Log.secondaryCode("closeheat help")})}}(this))["catch"](function(e){return Log.error(e)})},e.prototype.getAppData=function(e){return new Promise(function(o,t){return Authorized.request({url:Urls.appData(e),method:"get"},function(r,n){var i,u;if(r)return t(r);try{i=JSON.parse(n.body).app}catch(c){return u=c,t("App named '"+e+"' does not exist or the server is down.")}return o(i)})})},e.prototype.execCloning=function(e,o,t){return this.git=new Git,new Promise(function(o,r){return(new Git).exec("clone",["git@github.com:"+e+".git",t],function(e){return e?r(e):o()})})},e}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsb25lci5jb2ZmZWUiLCJjbG9uZXIuanMiXSwibmFtZXMiOlsiQXV0aG9yaXplZCIsIkNsb25lciIsIkdpdCIsIkxvZyIsIlByb21pc2UiLCJVcmxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJjbG9uZSIsImFwcF9uYW1lIiwibG9nbyIsInNwaW4iLCJ0aGlzIiwiZ2V0QXBwRGF0YSIsInRoZW4iLCJfdGhpcyIsImFwcCIsInN0b3AiLCJiciIsImdpdGh1Yl9yZXBvIiwiZXhlY0Nsb25pbmciLCJkZWZhdWx0X2JyYW5jaCIsImlubmVyIiwibGluZSIsImNvZGUiLCJwIiwic2Vjb25kYXJ5Q29kZSIsImVyciIsImVycm9yIiwicmVzb2x2ZSIsInJlamVjdCIsInJlcXVlc3QiLCJ1cmwiLCJhcHBEYXRhIiwibWV0aG9kIiwicmVzcCIsImUiLCJKU09OIiwicGFyc2UiLCJib2R5IiwiX2Vycm9yIiwiYnJhbmNoIiwiZ2l0IiwiZXhlYyJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBQUEsWUFBQUMsT0FBQUMsSUFBQUMsSUFBQUMsUUFBQUMsSUFBQUQsU0FBVUUsUUFBUSxZQUFsQkosSUFDTUksUUFBUSxlQURkTixXQUdhTSxRQUFRLGdCQUhyQkQsS0FJT0MsUUFBUSxVQUpmSCxJQUtNRyxRQUFRLFNBTGRDLE9BT09DLFFBQ0RQLE9BQUEsV0NLSixRQUFTQSxNQThEVCxNRGxFQUEsR0FBQVEsVUFBQUMsTUFBTyxTQUFDQyxHQ1NOLE1EUkFSLEtBQUlTLE9BQ0pULElBQUlVLEtBQU0sZ0NBQStCRixFQUFTLEtBRWxERyxLQUFDQyxXQUFXSixHQUFVSyxLQUFLLFNBQUFDLEdDTXpCLE1ETnlCLFVBQUNDLEdDVXhCLE1EVEZmLEtBQUlnQixPQUNKaEIsSUFBSWlCLEtBQ0pqQixJQUFJVSxLQUFNLGdDQUErQkssRUFBSUcsWUFBWSxLQUV6REosRUFBQ0ssWUFBWUosRUFBSUcsWUFBYUgsRUFBSUssZUFBZ0JaLEdBQVVLLEtBQUssV0NnQjdELE1EZkZiLEtBQUlnQixPQUNKaEIsSUFBSXFCLE1BQU8scUNBQW9DYixFQUFTLE1BRXhEUixJQUFJaUIsS0FDSmpCLElBQUlzQixLQUFLLDZCQUNUdEIsSUFBSXVCLE1BQ0QsTUFBS2YsRUFDTixjQUdGUixJQUFJaUIsS0FDSmpCLElBQUl3QixFQUFFLDJFQUNOeEIsSUFBSXlCLGNBQWMsb0JBRWxCekIsSUFBSWlCLEtBQ0pqQixJQUFJd0IsRUFBRSxpQ0FDTnhCLElBQUl5QixjQUFjLHNCQXRCS2QsT0F1QnpCLFNBQU0sU0FBQ2UsR0NFUCxNRERBMUIsS0FBSTJCLE1BQU1ELE1BNUJkNUIsRUFBQVEsVUE4QkFNLFdBQVksU0FBQ0osR0NJWCxNREhJLElBQUFQLFNBQVEsU0FBQzJCLEVBQVNDLEdDSXBCLE1ESEFoQyxZQUFXaUMsU0FBUUMsSUFBSzdCLEtBQUs4QixRQUFReEIsR0FBV3lCLE9BQVEsT0FBTyxTQUFDUCxFQUFLUSxHQUNuRSxHQUFBbkIsR0FBQW9CLENBQUEsSUFBc0JULEVBQXRCLE1BQU9HLEdBQU9ILEVBRWQsS0FDRVgsRUFBTXFCLEtBQUtDLE1BQU1ILEVBQUtJLE1BQU12QixJQUQ5QixNQUFBd0IsR0FHRSxNQURJSixHQUFBSSxFQUNHVixFQUFRLGNBQWFyQixFQUFTLDJDQ1d2QyxNRFRBb0IsR0FBUWIsUUF4Q2RqQixFQUFBUSxVQTBDQWEsWUFBYSxTQUFDRCxFQUFhc0IsRUFBUWhDLEdDY2pDLE1EYkFHLE1BQUM4QixJQUFVLEdBQUExQyxLQUVQLEdBQUFFLFNBQVEsU0FBQzJCLEVBQVNDLEdDWXBCLE9EWEksR0FBQTlCLE1BQU0yQyxLQUFLLFNBQVcsa0JBQWlCeEIsRUFBWSxPQUFPVixHQUFXLFNBQUNrQixHQUN4RSxNQUFzQkEsR0FBZkcsRUFBT0gsR0FFZEUsU0NpQkM5QiIsImZpbGUiOiJjbG9uZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJQcm9taXNlID0gcmVxdWlyZSAnYmx1ZWJpcmQnXG5HaXQgPSByZXF1aXJlICdnaXQtd3JhcHBlcidcblxuQXV0aG9yaXplZCA9IHJlcXVpcmUgJy4vYXV0aG9yaXplZCdcblVybHMgPSByZXF1aXJlICcuL3VybHMnXG5Mb2cgPSByZXF1aXJlICcuL2xvZydcblxubW9kdWxlLmV4cG9ydHMgPVxuY2xhc3MgQ2xvbmVyXG4gIGNsb25lOiAoYXBwX25hbWUpIC0+XG4gICAgTG9nLmxvZ28oKVxuICAgIExvZy5zcGluIFwiR2V0dGluZyBhcHBsaWNhdGlvbiBkYXRhIGZvciAje2FwcF9uYW1lfS5cIlxuXG4gICAgQGdldEFwcERhdGEoYXBwX25hbWUpLnRoZW4oKGFwcCkgPT5cbiAgICAgIExvZy5zdG9wKClcbiAgICAgIExvZy5icigpXG4gICAgICBMb2cuc3BpbiBcIkNsb25pbmcgR2l0aHViIHJlcG9zaXRvcnkgYXQgI3thcHAuZ2l0aHViX3JlcG99LlwiXG5cbiAgICAgIEBleGVjQ2xvbmluZyhhcHAuZ2l0aHViX3JlcG8sIGFwcC5kZWZhdWx0X2JyYW5jaCwgYXBwX25hbWUpLnRoZW4gPT5cbiAgICAgICAgTG9nLnN0b3AoKVxuICAgICAgICBMb2cuaW5uZXIgXCJDbG9uZWQgdGhlIGFwcCBjb2RlIHRvIGRpcmVjdG9yeSAnI3thcHBfbmFtZX0nLlwiXG5cbiAgICAgICAgTG9nLmJyKClcbiAgICAgICAgTG9nLmxpbmUgJ1J1biB0aGUgc2VydmVyIGJ5IHR5cGluZzonXG4gICAgICAgIExvZy5jb2RlIFtcbiAgICAgICAgICBcImNkICN7YXBwX25hbWV9XCJcbiAgICAgICAgICAnY2xvc2VoZWF0J1xuICAgICAgICBdXG5cbiAgICAgICAgTG9nLmJyKClcbiAgICAgICAgTG9nLnAgJ1RoZSBxdWlja2VzdCB3YXkgdG8gZGVwbG95IGNoYW5nZXMgdG8gY2xvc2VoZWF0LmNvbSBhbmQgR2l0aHViIGlzIHdpdGg6J1xuICAgICAgICBMb2cuc2Vjb25kYXJ5Q29kZSAnY2xvc2VoZWF0IGRlcGxveSdcblxuICAgICAgICBMb2cuYnIoKVxuICAgICAgICBMb2cucCAnRm9yIG1vcmUgYXdlc29tZSB0cmlja3MgdHlwZTonXG4gICAgICAgIExvZy5zZWNvbmRhcnlDb2RlICdjbG9zZWhlYXQgaGVscCdcbiAgICApLmNhdGNoIChlcnIpIC0+XG4gICAgICBMb2cuZXJyb3IoZXJyKVxuXG4gIGdldEFwcERhdGE6IChhcHBfbmFtZSkgLT5cbiAgICBuZXcgUHJvbWlzZSAocmVzb2x2ZSwgcmVqZWN0KSAtPlxuICAgICAgQXV0aG9yaXplZC5yZXF1ZXN0IHVybDogVXJscy5hcHBEYXRhKGFwcF9uYW1lKSwgbWV0aG9kOiAnZ2V0JywgKGVyciwgcmVzcCkgLT5cbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpIGlmIGVyclxuXG4gICAgICAgIHRyeVxuICAgICAgICAgIGFwcCA9IEpTT04ucGFyc2UocmVzcC5ib2R5KS5hcHBcbiAgICAgICAgY2F0Y2ggZVxuICAgICAgICAgIHJldHVybiByZWplY3QoXCJBcHAgbmFtZWQgJyN7YXBwX25hbWV9JyBkb2VzIG5vdCBleGlzdCBvciB0aGUgc2VydmVyIGlzIGRvd24uXCIpXG5cbiAgICAgICAgcmVzb2x2ZShhcHApXG5cbiAgZXhlY0Nsb25pbmc6IChnaXRodWJfcmVwbywgYnJhbmNoLCBhcHBfbmFtZSkgLT5cbiAgICBAZ2l0ID0gbmV3IEdpdCgpXG5cbiAgICBuZXcgUHJvbWlzZSAocmVzb2x2ZSwgcmVqZWN0KSAtPlxuICAgICAgbmV3IEdpdCgpLmV4ZWMgJ2Nsb25lJywgW1wiZ2l0QGdpdGh1Yi5jb206I3tnaXRodWJfcmVwb30uZ2l0XCIsIGFwcF9uYW1lXSwgKGVyciwgcmVzcCkgLT5cbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpIGlmIGVyclxuXG4gICAgICAgIHJlc29sdmUoKVxuIixudWxsXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=